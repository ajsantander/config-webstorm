<templateSet group="React.js">
  <template name="react class component" value="import React from 'react';&#10;&#10;class $NAME$ extends React.Component {&#10;  render() {&#10;    return (&#10;        &lt;div&gt;&#10;          $END$&#10;        &lt;/div&gt;&#10;    )&#10;  }&#10;}&#10;&#10;export default $NAME$;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="react func component" value="import React from 'react';&#10;&#10;const $NAME$ = () =&gt; {&#10;  return (&#10;      &lt;div&gt;&#10;        $END$&#10;      &lt;/div&gt;&#10;  )&#10;};&#10;&#10;export default $NAME$;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="react class container" value="import React from 'react';&#10;import { connect } from 'react-redux';&#10;import { bindActionCreators } from 'redux';&#10;&#10;class $NAME$ extends React.Component {&#10;  render() {&#10;    return (&#10;        &lt;div&gt;&#10;          $END$&#10;        &lt;/div&gt;&#10;    )&#10;  }&#10;}&#10;&#10;function mapStateToProps(state) {&#10;  return {&#10;    &#10;  };&#10;}&#10;&#10;function mapDispatchToProps(dispatch) {&#10;  return bindActionCreators({&#10;    &#10;  }, dispatch);&#10;}&#10;&#10;export default connect(&#10;  mapStateToProps, &#10;  mapDispatchToProps&#10;)($NAME$);" description="" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>